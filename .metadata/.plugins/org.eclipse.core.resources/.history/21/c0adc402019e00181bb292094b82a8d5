/*
 * Autocomplete.cpp
 *
 *  Created on: Aug 12, 2018
 *      Author: rcyl
 */
#include "Autocomplete.h"
#include "BSDeluxe.h"
#include "Term.h"
#include <algorithm>
#include <iostream>

Autocomplete::Autocomplete(std::vector<Term> &terms): terms(terms) {
	sort(this->terms.begin(), this->terms.end());
	std::cout << "sort done" << std::endl;
}

std::vector<Term> Autocomplete::allMatches(const std::string &prefix) {

	Term t(prefix, 1);

	std::cout << "prefix: " << prefix;
	std::cout << "prefix.len: " << prefix.length();

	int first = BSDeluxe<Term>::firstIndexOf(terms, t, ByPrefixOrder<Term>(prefix.length()));
	int last = BSDeluxe<Term>::lastIndexOf(terms, t, ByPrefixOrder<Term>(prefix.length()));

	if (first == -1 || last == -1)
		return nullptr;

	sort(terms.begin() + first, terms.begin() + last + 1, ReverseWeightOrder<Term>());

	return std::vector<Term>(terms.begin() + first, terms.begin() + last + 1);
}

int Autocomplete::numberOfMatches(const std::string &prefix) {

	Term t(prefix, 1);

	int first = BSDeluxe<Term>::firstIndexOf(terms, t,
				ByPrefixOrder<Term>(prefix.length()));
	int last = BSDeluxe<Term>::lastIndexOf(terms, t,
				ByPrefixOrder<Term>(prefix.length()));

	return last - first + 1;

}
