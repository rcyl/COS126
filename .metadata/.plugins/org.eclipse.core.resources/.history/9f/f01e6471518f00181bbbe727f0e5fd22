edited 24th july 2018

/* register map */

r0 = 
r1 = 
r2 = 
r3 = 
r4 = 
r5 = 
r6 = 
r7 = 
r8 = 
r9 = 
rA = 
rB = 
rC = 
rD = 
rE = 
rF =

*/

pa = 0
mor = 0

get&shift(0)
get&shift(1)
get&shift(2)
get&shift(3)


comp&shift(m3, 2) => p1 = (m1 ^ m2 ^ m3 ^ m4) ^ m3 =
							m1 ^ m2 ^ m4 
comp&shift(m2, 1)
comp&shift(m1, 0)


get&shift(shift):
	input_mask => read frm stdin
	mor =>  mor ^ input_mask
	temp = (1 << shift)
	ma += ma + temp
		
comp&shift(mask, shift):
	input_parity => read from stdin
	calc_parity = mor ^ mask 
	temp = (calc_parity == recv parity)
	if temp == 0
		temp << (1 << shift)
		pa += temp 
	
/* to get flip mask */	
temp = ma ^ pa


print(shift)
	temp = ma >> shift
	temp = temp & 1
	print temp
	

print(0)
print(1)
print(2)
print(3)



*/

