/*
 * main.cpp
 *
 *  Created on: Aug 12, 2018
 *      Author: rcyl
 */


#include "Term.h"
#include "BSDeluxe.h"
#include <vector>
#include <iostream>
#include <algorithm>

int main() {

	std::vector<Term> v;
	v.push_back(Term("aaa", 1));
	v.push_back(Term("bbb", 6));
	v.push_back(Term("ccc", 3));
	v.push_back(Term("aaa", 1));
	v.push_back(Term("bbb", 6));
	v.push_back(Term("ccc", 3));
	v.push_back(Term("aaa", 1));
	v.push_back(Term("bbb", 6));
	v.push_back(Term("ccc", 3));
	v.push_back(Term("aaa", 1));
	v.push_back(Term("bbb", 6));
	v.push_back(Term("ccc", 3));

	sort(v.begin(), v.end());
	std::cout << "lexi sort sort" << std::endl;
	for(Term t : v) std::cout << t.toString() << std::endl;

	int first = BSDeluxe<Term>::firstIndexOf(v, Term("aaa", 1), ByPrefixOrder<Term>(1));
	std::cout << "first-> " << first << std::endl;

	int last = BSDeluxe<Term>::lastIndexOf(v, Term("aaa", 1), ByPrefixOrder<Term>(1));
	std::cout << "last->: " << last << std::endl;


	return 0;
}

