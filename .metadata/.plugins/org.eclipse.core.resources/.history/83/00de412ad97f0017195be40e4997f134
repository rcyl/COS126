
/* register map */

r[0] 
r[1] = m0
r[2] = m1
r[3] = m2
r[4] = m3
r[5] = p0
r[6] = p1
r[7] = p2
r[8] = mask8
r[9] = temp
r[A] = &main
r[B] = 
r[C]= 
r[D] = 
r[E] = 
r[F] = 

loadaddr r8, 8 // 7808
loaddr ra, &main // 7AXX
main:
	store m0, 0xFF // 91FF
	and temp, m0, mask8 /* read first bit of input */ //3918
	bpos temp, halt // D9XX
	
	store m1, 0xFF
	store m2, 0xFF
	store m3, 0xFF
	
	(perCalc2)
	xor temp, m0, m3 // temp = m0 ^ m3
	xor p0, m1, temp // p0 = m0 ^ m1 ^ m3
	xor p1, m2, temp // p1 = m0 ^ m2 ^ m3
	xor temp, m1, m2 // temp = m1 ^ m2
	xor p2, temp, m3 // p2 = m1 ^ m2 ^ m3
	
	(print)
	load p0, 0xFF
	load p1, 0xFF
	load p2, 0xFF
	
	j ra
halt:
	0000