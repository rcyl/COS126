
/* register map */

r[0] 
r[1] = m0
r[2] = m1
r[3] = m2
r[4] = m3
r[5] = p0
r[6] = p1
r[7] = p2
r[8] = temp
r[9] = 
r[A] = 
r[B] = 
r[C]= 
r[D] = 
r[E] = 
r[F] = 


loadaddr mask8, 8 

main2:
	load m0, 0xFF
	and temp, m0, mask8 /* read first bit of input */
	bpos temp, halt
	
	load m1, 0xFF
	load m2, 0xFF
	load m3, 0xFF
	
	(perCalc2)
	xor temp, m0, m3 // temp = m0 ^ m3
	xor p0, m1, temp // p0 = m0 ^ m1 ^ m3
	xor p1, m2, temp // p1 = m0 ^ m2 ^ m3
	xor temp, m1, m2 // temp = m1 ^ m2
	xor p2, temp, m3 // p2 = m1 ^ m2 ^ m3
	
	(print)
	store p0, 0xFF
	store p1, 0xFF
	store p2, 0xFF
	
	j main2
halt:
	0000