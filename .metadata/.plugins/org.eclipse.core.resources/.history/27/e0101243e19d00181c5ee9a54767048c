/*
 * BSDeluxe.h
 *
 *  Created on: Aug 12, 2018
 *      Author: rcyl
 */

#ifndef BSDELUXE_H_
#define BSDELUXE_H_

#include <vector>
#include <algorithm>

template <typename Key>
class BSDeluxe {
public:
	template<class Compare>
	static int firstIndexOf(std::vector<Key> &a, const Key &key, Compare comp) {
		int lo = 0;
		int hi = a.size() - 1;
		int champion = -1;
//		while (lo <= hi) {
//			int mid = lo + (hi - lo) / 2;
//			if (a[mid] == key) {
//				/* found champion */
//				champion = mid;
//				if (champion > mid - 1)
//					hi = mid - 1;
//				else
//					lo = mid + 1;
//			}
//			else if (key < a[mid]) hi = mid - 1;
//			else lo = mid + 1;
//		}

		while (lo <= hi) {
			int mid = lo + (hi - lo) / 2;
			if (key < a[mid]) hi = mid - 1;
			else if (key > a[mid]) lo = mid + 1;
			/* key found */
			else {
				if (mid < champion)
					champion = mid;
			}
		}

		return champion;
	}

	template<class Compare>
	static int lastIndexOf(std::vector<Key> &a, const Key &key, Compare comp) {
		std::sort(a.begin(), a.end(), comp);
		return 0;
	}
};



#endif /* BSDELUXE_H_ */
